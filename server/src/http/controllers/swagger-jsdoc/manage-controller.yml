openapi: "3.1.0"
info:
  version: "1.0.0"
  title: "Manage tasks controller"
tags:
  - name: Tasks
    description: Manage tasks controller

paths:
  /tasks/create:
    post:
      summary: New task create
      tags:
        - Tasks
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "/schemas/task.schema.yml/#/components/schemas/TaskCreate"
      responses:
        '201':
          description: Task created successfully.
          content:
            application/json:
              schema:
                $ref: "/schemas/task.schema.yml/#/components/schemas/TaskResponse"
      x-handler: create
      x-middleware:
        - RateLimiter(manyRequest).getMiddleware()
        - ClassMiddleware(AuthMiddleware)
      x-middleware-description:
        - |
          This route applies a rate limiter middleware to control the number of requests allowed in a certain period of time.
          It allows a maximum of 30 requests per hour.
        - |
          This route applies an authentication middleware to control the access to the route.
          It allows access only to authenticated user.
      x-controller: manage-task-controller.ts

  /tasks/change/{id}:
    patch:
      summary: Change task status.
      tags:
        - Tasks
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The task id.
      responses:
        '200':
          description: Status of the task changed.
          content:
            application/json:
              schema:
                $ref: "/schemas/task.schema.yml/#/components/schemas/TaskResponse"
      x-handler: updateCondition
      x-middleware:
        - RateLimiter(fewRequest).getMiddleware()
        - ClassMiddleware(AuthMiddleware)
      x-middleware-description:
        - |
          This route applies a rate limiter middleware to control the number of requests allowed in a certain period of time.
          It allows a maximum of 10 requests per hour.
        - |
          This route applies an authentication middleware to control the access to the route.
          It allows access only to authenticated user.      
      x-cache-invalidation:
      description: |
        This route triggers the cache invalidation for the corresponding user data.
      example:
        code: |
          this.cache.emit('invalidate', this.taskCacheKey)
      x-controller: manage-task-controller.ts
      
  /tasks/fullChange/{id}:
    put:
      summary: New task create
      tags:
        - Tasks
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The task id.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "/schemas/task.schema.yml/#/components/schemas/TaskCreate"
      responses:
        '200':
          description: The task was updated with the defined changes.
          content:
            application/json:
              schema:
                $ref: "/schemas/task.schema.yml/#/components/schemas/TaskResponse"
      x-handler: updateCondition
      x-middleware:
        - RateLimiter(fewRequest).getMiddleware()
        - ClassMiddleware(AuthMiddleware)
      x-middleware-description:
        - |
          This route applies a rate limiter middleware to control the number of requests allowed in a certain period of time.
          It allows a maximum of 10 requests per hour.
        - |
          This route applies an authentication middleware to control the access to the route.
          It allows access only to authenticated user.      
      x-cache-invalidation:
      description: |
        This route triggers the cache invalidation for the corresponding user data.
      example:
        code: |
          this.cache.emit('invalidate', this.taskCacheKey)
      x-controller: manage-task-controller.ts



