openapi: "3.1.0"
info:
  version: "1.0.0"
  title: "Get tasks controller"
tags:
  - name: QueryTasks
    description: Get tasks controller

paths:
  /tasks/all:
    get:
      summary: Query all tasks
      tags:
        - QueryTasks
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              type: object[]
              items:
                $ref: "./schemas/task.schema.yml/#/components/schemas/TaskResponse"
    x-handler: queryAllTasks
    x-middleware:
      - RateLimiter(manyRequest).getMiddleware()
      - ClassMiddleware(AuthMiddleware)
    x-middleware-description:
      - |
        This route applies a rate limiter middleware to control the number of requests allowed in a certain period of time.
        It allows a maximum of 4 requests per hour.
      - |
        This route applies an authentication middleware to control the access to the route.
        It allows access only to authenticated user.
    x-controller: get-task-controller.ts
    x-cache:
      enabled: true
      description: |
        This route is cacheable. Responses are cached to improve performance.
        The cache remains valid until explicitly cleared. Once cleared, the cache will be refreshed with new data.

  /tasks/date/{month}/{day}/{year}:
    get:
      summary: Query tasks by full data
      tags:
        - QueryTasks
    parameters:
      - in: path
        name: month
        schema:
          type: string
        required: true
        description: The month of the task's date.
      - in: path
        name: day
        schema:
          type: string
        required: true
        description: The day of the task's date.
      - in: path
        name: year
        schema:
          type: string
        required: true
        description: The year of the task's date.
        validate:
          regex: ^\d{4}$
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              type: object[]
              items:
                $ref: "./schemas/task.schema.yml/#/components/schemas/TaskResponse"
    x-handler: getByFullDate
    x-middleware:
      - RateLimiter(manyRequest).getMiddleware()
      - ClassMiddleware(AuthMiddleware)
    x-middleware-description:
      - |
        This route applies a rate limiter middleware to control the number of requests allowed in a certain period of time.
        It allows a maximum of 10 requests per hour.
      - |
        This route applies an authentication middleware to control the access to the route.
        It allows access only to authenticated user.
    x-controller: get-task-controller.ts

  /tasks/month/{month}/{year}:
    get:
      summary: Query tasks by month
      tags:
        - QueryTasks
    parameters:
      - in: path
        name: month
        schema:
          type: string
        required: true
        description: The month of the tasks.
      - in: path
        name: year
        schema:
          type: string
        required: true
        description: The year of the tasks.
        validate:
          regex: ^\d{4}$
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              type: object[]
              items:
                $ref: "./schemas/task.schema.yml/#/components/schemas/TaskResponse"
    x-handler: getByMonth
    x-middleware:
      - RateLimiter(manyRequest).getMiddleware()
      - ClassMiddleware(AuthMiddleware)
    x-middleware-description:
      - |
        This route applies a rate limiter middleware to control the number of requests allowed in a certain period of time.
        It allows a maximum of 10 requests per hour.
      - |
        This route applies an authentication middleware to control the access to the route.
        It allows access only to authenticated user.
    x-controller: get-task-controller.ts

  /tasks/year/{year}:
    get:
      summary: Query tasks by year
      tags:
        - QueryTasks
    parameters:
      - in: path
        name: year
        schema:
          type: string
        required: true
        description: The year of the tasks.
        validate:
          regex: ^\d{4}$
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "./schemas/task.schema.yml/#/components/schemas/TaskResponse"
    x-handler: getByYear
    x-middleware:
      - RateLimiter(manyRequest).getMiddleware()
      - ClassMiddleware(AuthMiddleware)
    x-middleware-description:
      - |
        This route applies a rate limiter middleware to control the number of requests allowed in a certain period of time.
        It allows a maximum of 10 requests per hour.
      - |
        This route applies an authentication middleware to control the access to the route.
        It allows access only to authenticated user.
    x-controller: get-task-controller.ts

  /tasks/done/{condition}:
    get:
      summary: Query tasks by done condition
      tags:
        - QueryTasks
    parameters:
      - in: path
        name: condition
        schema:
          type: string
        required: true
        description: The condition of the tasks.
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              type: object[]
              items:
                $ref: "./schemas/task.schema.yml/#/components/schemas/TaskResponse"
    x-handler: getDoneOrNotTasks
    x-middleware:
      - RateLimiter(fewRequest).getMiddleware()
      - ClassMiddleware(AuthMiddleware)
    x-middleware-description:
      - |
        This route applies a rate limiter middleware to control the number of requests allowed in a certain period of time.
        It allows a maximum of 2 requests per hour.
      - |
        This route applies an authentication middleware to control the access to the route.
        It allows access only to authenticated user.
    x-controller: get-task-controller.ts

  tasks/overdue:
  get:
    summary: Get overdue tasks
    tags:
      - Overdue Tasks
    responses:
      "200":
        description: OK
        content:
          application/json:
            type: object[]
            schema:
              items:
                $ref: "./schemas/task.schema.yml/#/components/schemas/TaskResponse"
    x-handler: getOverdueTasks
    x-middleware:
      - RateLimiter(fewRequest).getMiddleware()
      - ClassMiddleware(AuthMiddleware)
    x-middleware-description:
      - |
        This route applies a rate limiter middleware to control the number of requests allowed in a certain period of time.
        It allows a maximum of 2 requests per hour.
      - |
        This route applies an authentication middleware to control the access to the route.
        It allows access only to authenticated user.
    x-controller: get-task-controller.ts
