openapi: "3.1.0"
info:
  version: "1.0.0"
  title: "Trash tasks controller"
tags:
  - name: Trash
    description: Trash tasks controller

paths:
  /trash/all:
    get:
      summary: Query all trash tasks.
      tags:
        - Trash
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              type: object
              items:
                $ref: "./schemas/task.schema.yml/#/components/schemas/TrashResponse"
    x-handler: findAllTrashTasks
    x-middleware:
      - RateLimiter(fewRequest).getMiddleware()
      - ClassMiddleware(AuthMiddleware)
    x-middleware-description:
      - |
        This route applies a rate limiter middleware to control the number of requests allowed in a certain period of time.
        It allows a maximum of 4 requests per hour.
      - |
        This route applies an authentication middleware to control the access to the route.
        It allows access only to authenticated user.
    x-cache-deleted:
      description: |
        This route triggers the cache deleted for the corresponding user data.
      example:
        code: |
          this.cache.del(this.taskCacheKey);
    x-cache:
      enabled: true
      description: |
        This route is cacheable. Responses are cached to improve performance.
        The cache remains valid until explicitly cleared. Once cleared, the cache will be refreshed with new data.
    x-controller: trash-controller.ts

  /trash/{id}/delete:
    delete:
      summary: Delete unique trash task by id.
      tags:
        - Trash
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              type: object
              items:
                $ref: "./schemas/task.schema.yml/#/components/schemas/TrashResponse"
    x-handler: deletedTrashTask
    x-middleware:
      - RateLimiter(manyRequest).getMiddleware()
      - ClassMiddleware(AuthMiddleware)
    x-middleware-description:
      - |
        This route applies a rate limiter middleware to control the number of requests allowed in a certain period of time.
        It allows a maximum of 10 requests per hour.
      - |
        This route applies an authentication middleware to control the access to the route.
        It allows access only to authenticated user.
    x-cache-deleted:
      description: |
        This route triggers the cache deleted for the corresponding user data.
      example:
        code: |
          this.cache.del(this.taskCacheKey);
    x-controller: trash-controller.ts

  /trash/delete/all:
    delete:
      summary: Delete all trash task.
      tags:
        - Trash
    responses:
      200:
        description: OK
        content:
          - No body return.
    x-handler: deletedAllTrashTasks
    x-middleware:
      - RateLimiter(manyRequest).getMiddleware()
      - ClassMiddleware(AuthMiddleware)
    x-middleware-description:
      - |
        This route applies a rate limiter middleware to control the number of requests allowed in a certain period of time.
        It allows a maximum of 10 requests per hour.
      - |
        This route applies an authentication middleware to control the access to the route.
        It allows access only to authenticated user.
    x-cache-deleted:
      description: |
        This route triggers the cache deleted for the corresponding user data.
      example:
        code: |
          this.cache.del(this.taskCacheKey);
    x-controller: trash-controller.ts
